generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

generator erd {
  provider = "prisma-erd-generator"
  theme = "forest"
}

enum LedgerEntryType {
  Income
  Expense
  Transfer
}

model LedgerCategory {
  id    String  @id @default(cuid())
  name  String  @unique
  color String?
  icon  String?

  ledger Ledger[]
}

model Ledger {
  id            String          @id @default(cuid())
  type          LedgerEntryType
  name          String
  description   String
  amount        Float
  currency      String?         @default("EUR")
  date          DateTime        @default(now())
  userId        String
  categoryId    String
  fromAccountId String
  toAccountId   String?

  user        User           @relation(fields: [userId], references: [id])
  category    LedgerCategory @relation(fields: [categoryId], references: [id])
  fromAccount Account        @relation("paymentFromAccount", fields: [fromAccountId], references: [id])
  toAccount   Account?       @relation("paymentToAccount", fields: [toAccountId], references: [id])
}

model Account {
  id     String  @id @default(cuid())
  name   String  @unique
  color  String?
  userId String

  user User @relation(fields: [userId], references: [id])

  paymentFromAccount Ledger[] @relation("paymentFromAccount")
  paymentToAccount   Ledger[] @relation("paymentToAccount")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())

  ledger  Ledger[]
  accounts Account[]
}
